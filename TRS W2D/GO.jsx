                                                        /////////////////MAIN STARTS////////////////////////////                                                         var fileSep = "/";                                                                                                                 //Where fileSep is "/" you can change it though if you are on windows.                                                        if(File.fs=="Windows")                                                        {                                                             fileSep = "\\";                                                        }                                                        //---OPENS THE TEMPLATE-------//                                                                                                                          app.open(File(app.activeScript.parent.fsName+fileSep+'DITAnator_templates'+fileSep+'TRS.indt'));                                                                                                                 ///////END OF DIALOG////////////////////////////////////////////////                                                                                                                                                                        //////DITANATION STARTS HERE//////////////////////////////////////                                                                                                                var myDoc = app.activeDocument;                                                        /////OPENS THE XML FILE////////////////////////////////                                                                                                                  var myFile = '';                                                        try{                                                          function maskFile(myFile) {                                                          if (myFile.constructor.name == "Folder") { return true }                                                          if (myFile.name.slice(-4) == ".xml") { return true }                                                          return false;                                                          }                                                          var myFile = File.openDialog("GET YOUR XML FILE", maskFile);                                                          var myXML = myDoc.importXML(myFile);                                                          myXML;                                                          }                                                         catch(e){                                                         exit();                                                         };                                                                                                             ///////////////MY GLOBAL XML VARIABLES///////////////////////////////////////////////                                                                                                                 var xml = myDoc.xmlElements[0];                                                                                                                  //////*****MAKES XPATH HAPPY AND COOPERATIVE*****////////////////////////////////////                                                                                                                 if( !xml.xmlAttributes.itemByName("xmlns:xml").isValid )                                                        xml.xmlAttributes.add( "xmlns:xml", "http://www.w3.org/XML/1998/namespace" );                                                        if( !xml.xmlAttributes.itemByName("xmlns:aid").isValid )                                                        xml.xmlAttributes.add( "xmlns:aid", "http://ns.adobe.com/Adobe InDesign/4.0/" );                                                        if( !xml.xmlAttributes.itemByName("xmlns:aid5").isValid )                                                        xml.xmlAttributes.add( "xmlns:aid5", "http://ns.adobe.com/Adobe InDesign/5.0/" );                                                                                                                ////////////////////////-----XPATH-------/////////////////////////////////////////////////                                                                                                                  var pageNode= xml.evaluateXPathExpression('//page');                                                       var maxPage =0;                                                       var minPage = pageNode[0].xmlAttributes.item('value').value;                                                       var myContent = xml.evaluateXPathExpression("//*[contains(@class,' topic/topic ')]");                                                                                                              ///-----------BOOK META---------//                                                                                                              var bookTitle = xml.evaluateXPathExpression('//mainpubtitle');                                                       var bookMeta = xml.evaluateXPathExpression('//data');                                                       var myChapter = xml.evaluateXPathExpression('//chapter');                                                       var myAuthors = xml.evaluateXPathExpression('//author');                                                                                                                                                                     //----TRS PAGE BLOCK LABEL----//                                                                                                              var myBlocks = xml.evaluateXPathExpression("//navtitle[contains(@*[local-name() = 'pstyle'],'Block_navtitle')]")                                                       var myBlockPages = xml.evaluateXPathExpression("//navtitle[contains(@*[local-name() = 'pstyle'],'Block_navtitle')]/following::page[1]")                                                                                                               //----TRS DAY, WEEK, GRADE, UNIT - PICKER----//                                                                                                              var myDay = xml.evaluateXPathExpression("//navtitle[contains(@*[local-name() = 'pstyle'],'Day_navtitle')]")                                                       var myWeek = xml.evaluateXPathExpression("//navtitle[contains(@*[local-name() = 'pstyle'],'Week_navtitle')]")                                                       var myUnit = xml.evaluateXPathExpression("//navtitle[contains(@*[local-name() = 'pstyle'],'Unit_navtitle')]")                                                                                                              //-----END OF GLOBAL XPATH'S---//                                                                                                              ////----SETS THE DOCUMENT'S FIRST  PAGE NUMBER-------/////////////////////                                                                                                              myDoc.documentPreferences.startPageNumber  = parseInt(minPage);                                                       ////-----CREATE DOCUMENT PAGES-------------///////////////////////////////////                                                       for(x=1;x < pageNode.length; x++){                                                                                                                          try{                                                                var page = pageNode[x].xmlAttributes.itemByName("value").value;                                                                //alert(page);                                                                maxPage = Math.max(page,maxPage);                                                                }                                                                catch(e){}                                                                }                                                                // add that many pages                                                         for (x=minPage; x <= maxPage-1;x++){                                                               myPage = myDoc.pages.add();                                                               }                                                                                                                      //-----------------LETS GET SOME INFO FROM THE XML---------------------//                                                                                                              //---IS IT GK-2 OR 3-6??-----------------------------------------//                                                                                                            var gnPattern=/\d/;                                                      var myGradeNumber = gnPattern.exec(bookTitle[0].xmlContent.contents);//~                                                       alert(myGradeNumber)                                                        try{                                                            if(myGradeNumber > 2 && myGradeNumber !== null){                                                                myDoc.masterSpreads.itemByName('B-Master').appliedMaster  = myDoc.masterSpreads.itemByName('G-3-6');                                                                }                                                            }                                                        catch(e){}                                                                                                                    //--first page prep---//                                                         if(app.activeDocument.masterSpreads.itemByName('B-Master').appliedMaster.name == 'G-K-2'){                                                          if(parseInt(myDoc.pages[0].name)%2!==0){                                                          myDoc.pages[0].appliedMaster = myDoc.masterSpreads.item('G-K-2 Right')                                                          for(pp = 0; pp < myDoc.pages[0].textFrames.everyItem().getElements().length;  pp++){                                                              if(myDoc.pages[0].textFrames[pp].label == 'Week_Day'){                                                                  myDoc.pages[0].textFrames[pp].remove;                                                                  }                                                              }                                                            }                                                        }                                                    else{                                                        if(parseInt(myDoc.pages[0].name)%2!==0){                                                          myDoc.pages[0].appliedMaster = myDoc.masterSpreads.item('G-3-6 Right')                                                          for(pp = 0; pp < myDoc.pages[0].textFrames.everyItem().getElements().length;  pp++){                                                              if(myDoc.pages[0].textFrames[pp].label == 'Week_Day'){                                                                  myDoc.pages[0].textFrames[pp].remove;                                                                  }                                                              }                                                            }                                                        }                                                        //---DETACHES THE FRAMES FROM THE MASTER PAGE------///////////////////////                                                                                        function detacher() {                                                                          var doc = app.activeDocument,                                                                              i, l, page, j, k;                                                                                                                                                        for (i = 0, l = doc.pages.length; i < l; i++) {                                                                              page = doc.pages[i];                                                                              if (page.appliedMaster !== null) {                                                                                  for (j = 0, k = page.appliedMaster.pageItems.length; j < k; j++) {                                                                                      try {                                                                                          if(page.appliedMaster.textFrames[j].contents == 0){                                                                                        page.appliedMaster.textFrames[j].override(page);                                                                                      }                                                                                } catch(e) {}                                                                                  }                                                                              }                                                                              page.pageItems.everyItem().detach();                                                                              }                                                                      }                                                                                                                                            if (app.documents.length > 0) {                                                                          app.doScript(detacher, ScriptLanguage.JAVASCRIPT, undefined, UndoModes.ENTIRE_SCRIPT, "Detach Master Page Items");                                                                      }                                                                 //~                                                         //-----THREADS OBSERVATION CHECKLISTS FRAMES----------////~                                                         //~                                                         try{//~                                                         var allpages =  myDoc.pages.everyItem().getElements();//~                                                         for (p = 0; p < allpages.length; p++){//~                                                         var myTextFrames = myDoc.pages[p].textFrames.everyItem().getElements();//~                                                               for(x=0;x<myTextFrames.length;x++){//~                                                               myTextFrames[x].name = myTextFrames[x].label;//~                                                                 if (myTextFrames[x].label =='observation_checklist_thread'){//~                                                               myTextFrames[x].previousTextFrame = myTextFrames[x].parentPage.textFrames.itemByName('observation_checklist');//~                                                               }//~                                                               }//~                                                               }//~                                                               }//~                                                               catch(e){}                                                                                                               ///------TRS FURNITURE DATA--------------------------------------///                                                                                                                                                                    ///----TRS BLOCK NAVTITLE--------------------////                                                                                                             try{                                                       for(p = 0; p < myBlocks.length; p++){                                                       var startBP = myBlockPages[p].xmlAttributes.item('value').value;                                                       var endBP = '';                                                       if(myBlockPages[p+1] == null){                                                             endBP = myDoc.pages.lastItem().name;                                                           }                                                       else{                                                           endBP = myBlockPages[p+1].xmlAttributes.item('value').value;                                                       }                                                       metaPlacer(myDoc.pages.itemByRange(startBP, endBP),myBlocks[p].xmlContent.contents,'Block','Block_navtitle');                                                        }                                                       }                                                       catch(e){}                                                                                                                 //----TRS Page FOOTER--//                                                       try{                                                        //--grep--//                                                          var gPattern=/Grade\s\d/;                                                       var uPattern = /Unit\s\d/;                                                       var wPattern = /Week\s\d/;                                                       var dPattern = /Day\s\d/;                                                       var dPatternDayFrame1 = /Day/;                                                       var dPatternDayFrame2 = /\s\d/;                                                       //---//                                                                                                              //--gets the meta content--//                                                                                                              var myGrade = gPattern.exec(bookTitle[0].xmlContent.contents);                                                       var myUnit= uPattern.exec(myUnit[0].xmlContent.contents);                                                       var myWeek= wPattern.exec(myWeek[0].xmlContent.contents);                                                       var myDay1 = dPattern.exec(myDay[0].xmlContent.contents);                                                       var myDay2 = dPatternDayFrame1.exec(myDay[0].xmlContent.contents);                                                       var myDay3 = dPatternDayFrame2.exec(myDay[0].xmlContent.contents);                                                                                                              //--places the content--//                                                       for(p = 0; p < myDoc.pages.everyItem().getElements().length; p++){                                                       metaPlacer(myDoc.pages[p],myGrade+' • '+myUnit+' • '+myWeek,'Footer');                                                                                                               if(app.activeDocument.masterSpreads.itemByName('B-Master').appliedMaster.name == 'G-K-2'){                                                       metaPlacer(myDoc.pages[p],myWeek+' • '+myDay1,'Week_Day');                                                        metaPlacer(myDoc.pages[p],myDay2+'\r'+myDay3,'Day')                                                       }                                                       else{                                                           metaPlacer(myDoc.pages[p],myUnit+' • '+myWeek,'Week_Day');                                                            }                                                       }                                                       }                                                      catch(e){}                                                                                                                                                                  //-------------------CONTENT--------------------------------------------------//                                                                                                               var allTextFrames = toArray(myDoc.textFrames);                                                        var bodyTextFrames = selectWhere("body_content", "label", allTextFrames);                                                        var sidebarTextFrames = selectWhere("sidebar_content", "label", allTextFrames);                                                            for(x=0;x < Math.min(allTextFrames.length, myContent.length) ;x++){                                                            try{                                                                //var type1= ditas[x].xmlAttributes.itemByName("outputclass").value;                                                                var type= myContent[x].xmlAttributes.itemByName("outputclass").value;                                                                                                            //alert(type);                                                                var page = pageNode[x].xmlAttributes.item("value").value;                                                                //var label = allTextFrames[x].label;                                                                //alert(page);                                                                }                                                                catch(e){                                                                    }                                                                try{                                                                var pageBodyTextFrames = selectWhere(type, "label", myDoc.pages[page-parseInt(minPage)].textFrames);                                                                 var newTextFrame = pageBodyTextFrames[0];                                                                myContent[x].placeXML(newTextFrame);                                                                ///meta/////                                                                }                                                                catch(e){                                                                    }                                                                }                                                                                                                          //------POURS EVERYTHING ELSE THAT IS NOT ON THE TEMPLATE-----------------------//                                                                                                                for (i = 0; i < pageNode.length; i++){                                                         try{                                                        if(myContent[i].xmlContent.parent.name==""){                                                        var page = pageNode[i].xmlAttributes.item("value").value;                                                        //alert(page);                                                        var nodeLabel = myContent[i].xmlAttributes.itemByName("outputclass").value;                                                        myContent[i].placeXML(addTextFrame(myDoc.pages[page-parseInt(minPage)], nodeLabel))                                                        }                                                        }                                                        catch(e){}                                                        }                                                                                                                                                                                                                //---THREADS OVERFLOWED LESSONS INTO THE NEXT PAGE EMPTY LESSON FRAME------//                                                                                                            try{                                                        var allpages =  myDoc.pages.everyItem().getElements();                                                        for (p = 0; p < allpages.length; p++){                                                        var myTextFrames = myDoc.pages[p].textFrames.everyItem().getElements();                                                              for(x=0;x<myTextFrames.length;x++){                                                             myTextFrames[x].name = myTextFrames[x].label;                                                                  if (myTextFrames[x].label =='Lesson' && myTextFrames[x].contents == ''){                                                              myTextFrames[x].previousTextFrame = myDoc.pages[p-1].textFrames.itemByName('Lesson');                                                              var gb0 = myTextFrames[x].geometricBounds[0];                                                              var gb1 = myTextFrames[x].geometricBounds[1];                                                              var gb2 = myTextFrames[x].geometricBounds[2];                                                              var gb3 = myTextFrames[x].geometricBounds[3];                                                              myTextFrames[x].move([gb1,gb0+.75])                                                              }                                                              }                                                              }                                                              }                                                             catch(e){}                                                                                                                                                                             /////RE IMPORTS THE XML FILE FOR PROPER STYLING/////////////////////////////////                                                                                                               myDoc.importXML(myFile);                                                                                                                  //--------RUNS TABLENATOR FOR PROPER TABLE WIDTH AND NO EXTRA RETURNS INSIDE TABLES & WARHOL FOR ICON PLACEMENT-------//                                                         try{                                                         app.doScript(new File(app.activeScript.parent.fsName+fileSep+"Tablenator.jsx"), ScriptLanguage.javascript);                                                         app.doScript(new File(app.activeScript.parent.fsName+fileSep+"Warhol.jsx"), ScriptLanguage.javascript);                                                         }                                                          catch(e){}                                                                                                                                                                                                                                        //----BOOK META------------------------.///                                                                                                                    ////BOOK TITLE AND METADATA/////////////                                                             for(a = 0; a < bookTitle.length; a++){                                                             var metaTextFrames = myDoc.textFrames.everyItem().getElements();                                                             for(i = 0; i < metaTextFrames.length; i++){                                                                 if (metaTextFrames[i].label == 'book_title' ){                                                                     bookTitle[a].placeXML(metaTextFrames[i]);                                                                                                                                                                                                      }                                                                 }                                                             }                                                                                                           //----*** GET LESSON AND ELD STANDARDS ***----//                                                                                                               //----Lesson  standards  super duper awersome XPaths----//                                                                                                  var myLessonAhds = xml.evaluateXPathExpression("//title[contains(@*[local-name() = 'pstyle'],'Lesson_A-hd')]");                                                 var myLessonProlog = xml.evaluateXPathExpression("//title[contains(@*[local-name() = 'pstyle'],'Lesson_A-hd')]/following-sibling::prolog");                                                 var myLessonTime = xml.evaluateXPathExpression("//title[contains(@*[local-name() = 'pstyle'],'Lesson_A-hd')]/following-sibling::prolog/child::data[contains(@name,'time')]");                                                 var myLessonStandards = xml.evaluateXPathExpression("//title[contains(@*[local-name() = 'pstyle'],'Lesson_A-hd')]/following-sibling::prolog/child::data[contains(@name,'standards')]");                                                 var myLessonNumber = xml.evaluateXPathExpression("//title[contains(@*[local-name() = 'pstyle'],'Lesson_A-hd')]/following-sibling::prolog/child::data[contains(@name,'Lesson_number')]");                                                  //----Gets the standards into the lesson A-hds-------//                                                  try{                                                            for(s = 0; s < myLessonAhds.length; s++){                                                                myLessonAhds[s].parentStory.paragraphs[0].insertionPoints[-2].appliedCharacterStyle = 'Lesson_Time';                                                                myLessonAhds[s].parentStory.paragraphs[0].insertionPoints[-2].contents = ' ' + myLessonTime[s].xmlAttributes.item('value').value;                                                                myLessonAhds[s].parentStory.paragraphs[0].insertionPoints[-2].appliedCharacterStyle = 'Lesson_Standard';                                                                myLessonAhds[s].parentStory.paragraphs[0].insertionPoints[-2].contents = ' ' + myLessonStandards[s].xmlAttributes.item('value').value;                                                                }                                                              }                                                            catch(e){}                                                                                                                                                               //---fits frames size to contents--//                                                     try{                                                     var myTextFrames = myDoc.pages[p].textFrames.everyItem().getElements();                                                     for(x=0;x<myTextFrames.length;x++){                                                        myTextFrames[x].fit(FitOptions.FRAME_TO_CONTENT);                                                                 }                                                        }                                                      catch(e){}                                                   //----Gets the standards into the standards footer-------//                                                               try{                                                                for(s = 0; s < myLessonAhds.length; s++){                                                                    var ccssPage =  myLessonAhds[s].parentStory.insertionPoints.lastItem().parentTextFrames[0].parentPage.name;//~                                                                     //~                                                                     alert(ccssPage)                                                                var standardsFooter = myDoc.pages[parseInt(ccssPage)-minPage].textFrames.everyItem().getElements();                                                                for(i = 0; i < standardsFooter.length; i++){                                                                                                if(standardsFooter[i].label == 'standards'){                                                                     standardsFooter[i].contents = myLessonStandards[s].xmlAttributes.item('value').value;                                                                     standardsFooter[i].parentStory.paragraphs[0].insertionPoints[0].appliedParagraphStyle = 'CCSS';                                                                     }                                                                }                                                            }                                                                                                    //----Gets the lesson # for grades 3 - 6-------//                                                if(app.activeDocument.masterSpreads.itemByName('B-Master').appliedMaster.name == 'G-3-6' || app.activeDocument.masterSpreads.itemByName('B-Master').appliedMaster.name == 'G-3-6 Right'){                                                                for(s = 0; s < myLessonAhds.length; s++){                                                            var aHeadPage =  myLessonAhds[s].parentStory.insertionPoints[0].parentTextFrames[0].parentPage.name;//~                                                            alert(aHeadPage)                                                  metaPlacer(myDoc.pages[parseInt(aHeadPage) - minPage],myLessonNumber[s].xmlAttributes.item('value').value,'lesson_number')                                            }                                        }                                    }                                    catch(e){}                                                                                                                                                                                                                                                                                                                       //~ alert(myEndFrame.parentTextFrames[0].parentPage.name)                                                            //~                                                    //----ELD  standards  super duper awersome XPaths----////~                                                  //~                                                  var myLessonAhds = xml.evaluateXPathExpression("//title[contains(@*[local-name() = 'pstyle'],'ELD_A-hd')]");//~                                                  var myLessonProlog = xml.evaluateXPathExpression("//title[contains(@*[local-name() = 'pstyle'],'ELD_A-hd')]/following-sibling::prolog");//~                                                  var myLessonTime = xml.evaluateXPathExpression("//title[contains(@*[local-name() = 'pstyle'],'ELD_A-hd')]/following-sibling::prolog/child::data[contains(@name,'time')]");//~                                                  var myLessonStandards = xml.evaluateXPathExpression("//title[contains(@*[local-name() = 'pstyle'],'ELD_A-hd')]/following-sibling::prolog/child::data[contains(@name,'eld_standards')]");//~                                                   //----Gets the standards into the lesson A-hds-------////~                                                   //~                                                             for(s = 0; s < myLessonAhds.length; s++){//~                                                                 myLessonAhds[s].parentStory.paragraphs[0].insertionPoints[-2].appliedCharacterStyle = 'Lesson_Time';//~                                                                 myLessonAhds[s].parentStory.paragraphs[0].insertionPoints[-2].contents = ' ' + myLessonProlog[s].xmlElements[0].xmlAttributes.item('value').value;//~                                                                 myLessonAhds[s].parentStory.paragraphs[0].insertionPoints[-2].appliedCharacterStyle = 'Lesson_Standard';//~                                                                 myLessonAhds[s].parentStory.paragraphs[0].insertionPoints[-2].contents = ' ' + myLessonProlog[s].xmlElements[1].xmlAttributes.item('value').value;//~                                                                 var myEndFrame = myLessonAhds[s].parentStory.insertionPoints.lastItem();//~                                                                 var standardsPage = myEndFrame.parentTextFrames[0].parentPage.name;//~                                                                 var standardsFooter = myDoc.pages[parseInt(standardsPage)-minPage].textFrames.everyItem().getElements();//~                                                                 for(i = 0; i < standardsFooter.length; i++){                               //~                                                                  if(standardsFooter[i].label == 'standards'){//~                                                                      standardsFooter[i].contents = myLessonProlog[s].xmlElements[1].xmlAttributes.item('value').value;//~                                                                      standardsFooter[i].parentStory.paragraphs[0].insertionPoints[0].appliedParagraphStyle = 'CCSS';//~                                                                      }//~                                                                 }//~                                                                 }                                                                                                                   ///-----REMOVES UNUSED FRAMES------//                                                                                                                     var myTextFrames = myDoc.textFrames.everyItem().getElements();                                                       for(x=0;x<myTextFrames.length;x++){                                                       try{                                                     //~     alert(myTextFrames[x].appliedObjectStyle.name);                                                      if(myTextFrames[x].contents == ''&&myTextFrames[x].label !==''){                                                          myTextFrames[x].remove()                                                          }                                                                      }                                                        catch(e){}                                                    }                                                //~                                                  //-----GROUPS THE OBSERVATION CHECKLISTS FRAMES----------////~                                                      //~                                                         try{//~                                                         var allpages =  myDoc.pages.everyItem().getElements();//~                                                         for (p = 0; p < allpages.length; p++){//~                                                         var myTextFrames = myDoc.pages[p].textFrames.everyItem().getElements();//~                                                         for(x=0;x<myTextFrames.length;x++){//~                                                         if (myTextFrames[x].label =='observation_checklist_thread'){//~                                                         var objPage = myTextFrames[x].parentPage.name;//~                                                         myTextFrames[x].fit(FitOptions.FRAME_TO_CONTENT);//~                                                         myDoc.pages[parseInt(objPage) - minPage].groups.add([myTextFrames[x],myTextFrames[x].parentPage.textFrames.itemByName('observation_checklist')])//~                                                         }//~                                                         }//~                                                         }//~                                                         }//~                                                         catch(e){}                                                                                                            try{                                                    //----TRS DAY COLORING---//                                                    if(app.activeDocument.masterSpreads.itemByName('B-Master').appliedMaster.name == 'G-K-2'){                                                    var pattern = /Day\s\d/;                                                    var color = pattern.exec(myDay[0].xmlContent.contents);//~                                                     alert(myDoc.swatches.itemByName(color).name)                                                    for(c = 0; c < myDoc.swatches.length; c++){                                                    if(myDoc.swatches[c].name == color){                                                        color = myDoc.swatches[c].name                                                    myDoc.swatches.itemByName('Default').remove(color);                                                              }                                                          }                                                     }                                                 else{                                                         myDoc.swatches.itemByName('Default').remove('Day 1');                                                     }                                                 }                                                 catch(e){}                                                                                                                                           //---aligns sidebars and locks furniture data---//                                                                                                                 var footer_labels = myDoc.textFrames.everyItem().getElements();                                                             for(i = 0; i < footer_labels.length; i++){                                                                 if (footer_labels[i].label == 'Footer' || footer_labels[i].label == 'Week_Day'){                                                                     footer_labels[i].locked = true;                                                                     }                                                                 }                                                                         try{                                                         app.doScript(new File(app.activeScript.parent.fsName+fileSep+"aligner.jsx"), ScriptLanguage.javascript);                                                         app.doScript(new File(app.activeScript.parent.fsName+fileSep+"standarizer.jsx"), ScriptLanguage.javascript);                                                         }                                                          catch(e){}                                                                                   //~                                                                                                                            ////END OF SCRIPT//////////////////////////////////////////////////////////////////////////////////////////////////////                                                                                                                     /////MY FUNCTIONS/////////////////////////////////////////////////////////////////////////////////////////////////////                                                                //---adds texts frames---//                                                                function addTextFrame(page, script_label){                                                                                                                          var pos  = -4 +" in";                                                                  var hand = page.side                                                                if (hand == PageSideOptions.LEFT_HAND)                                                                         pos = -4 +" in";  ;                                                                if (hand == PageSideOptions.RIGHT_HAND)                                                                         pos = 20 +" in";                                                                      if (page.name == 1)                                                                         pos = -4 +" in";                                                                                                                  var textFrame = page.textFrames.add({geometricBounds:[0, 0, 8 + ' in', 3 + ' in']});                                                                textFrame.move( [pos , 0 ] );                                                                textFrame.label = script_label;                                                                return textFrame;                                                                }                                                                                                                              function selectWhere(value, key, array){                                                                var i = array.length; var t; var filtered = [];                                                                    while(i--){                                                                    t = array[i];                                                                        if(t && t[key] == value && t.contents==0){                                                                            filtered.push(t);                                                                 }                                                                 }                                                                    return filtered;                                                                }                                                             //---creates arrays---------///                                                            function toArray(objects){                                                                var i = objects.length;                                                                 var array = [];                                                                while(i--){                                                                        array.push(objects[i]);                                                                }                                                                return array;                                                            }                                                                                                                    //----counts stuff---------//                                                            function countTheseElements(xmlfrag, xpath){                                                            var c = 0;                                                            for(x=0; x < xmlfrag.length;x++)                                                                {                                                                    $.writeln(xmlfrag[x].xmlElement[0].length);                                                                                                                                        }                                                     };                                                                                                  //---populates  meta data frames------------//                                                  function metaPlacer(page,content,myType){                                                           var metaFrames = page.textFrames.everyItem().getElements();                                                           for (i = 0; i < metaFrames.length; i++){                                                                if(metaFrames[i].label == myType){                                                                metaFrames[i].contents = content;                                                                }                                                                }                                                           };                                               